package com.blackducksoftware.integration.jira.task.conversion.output;

import static org.junit.Assert.assertEquals;

import java.net.URISyntaxException;
import java.util.Date;

import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import com.blackducksoftware.integration.hub.api.project.ProjectVersion;
import com.blackducksoftware.integration.hub.dataservices.notification.items.VulnerabilityContentItem;
import com.blackducksoftware.integration.hub.exception.MissingUUIDException;

public class VulnerabilityEventTest {


	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Test
	public void testHttpsWithPort() throws MissingUUIDException, URISyntaxException {
		final String urlPrefix = "https://hub.bds.com:8080/";
		final String projectVersionRelativeUrl = "api/projects/1234/versions/5678";
		final String projectVersionUrl = urlPrefix + projectVersionRelativeUrl;

		final String componentVersionRelativeUrl = "api/components/12345/versions/56789";
		final String componentVersionUrl = urlPrefix + componentVersionRelativeUrl;

		final ProjectVersion projectVersion = new ProjectVersion();
		projectVersion.setProjectName("projectName");
		projectVersion.setProjectVersionName("projectVersionName");
		projectVersion.setUrl(projectVersionUrl);

		final VulnerabilityContentItem vulnerabilityContentItem = new VulnerabilityContentItem(new Date(),
				projectVersion, "componentName", "componentVersion", componentVersionUrl, null, null, null);

		final VulnerabilityEvent event = new VulnerabilityEvent("jiraUserName", "jiraUserId", "issueAssigneeId",
				"jiraIssueTypeId", 1L, "jiraProjectName", vulnerabilityContentItem, HubEventAction.OPEN);

		final String expectedKey = "t=v|jp=1|hpv=" + String.valueOf(projectVersionRelativeUrl.hashCode()) + "|hcv="
				+ String.valueOf(componentVersionRelativeUrl.hashCode());

		assertEquals(expectedKey, event.getUniquePropertyKey());
	}

}
