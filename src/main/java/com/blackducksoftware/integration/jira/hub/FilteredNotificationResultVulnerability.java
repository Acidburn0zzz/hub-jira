package com.blackducksoftware.integration.jira.hub;

import java.util.UUID;

import com.blackducksoftware.integration.jira.issue.EventType;

public class FilteredNotificationResultVulnerability extends FilteredNotificationResult {
	// TODO these may have to change
	private final String vulnerabilitySource;
	private final String vulnerabilityId;

	public FilteredNotificationResultVulnerability(final String hubProjectName, final String hubProjectVersion,
			final String hubComponentName, final String hubComponentVersion,
			final UUID hubProjectVersionId, final UUID hubComponentId,
			final UUID hubComponentVersionId, final String jiraUserName,
			final String jiraIssueTypeId, final Long jiraProjectId, final String jiraProjectName,
			final EventType eventType, final String vulnerabilitySource, final String vulnerabilityId) {

		super(hubProjectName, hubProjectVersion, hubComponentName, hubComponentVersion, hubProjectVersionId,
				hubComponentId, hubComponentVersionId, jiraUserName, jiraIssueTypeId, jiraProjectId, jiraProjectName,
				eventType);
		this.vulnerabilitySource = vulnerabilitySource;
		this.vulnerabilityId = vulnerabilityId;
	}

	public String getVulnerabilitySource() {
		return vulnerabilitySource;
	}

	public String getVulnerabilityId() {
		return vulnerabilityId;
	}


	@Override
	public String getUniquePropertyKey() {
		final StringBuilder keyBuilder = new StringBuilder();
		keyBuilder.append(getJiraProjectId().toString());
		keyBuilder.append(".");
		keyBuilder.append(getHubProjectVersionId().toString());
		keyBuilder.append(".");
		keyBuilder.append(getHubComponentId().toString());
		keyBuilder.append(".");
		if (getHubComponentVersionId() != null) {
			keyBuilder.append(getHubComponentVersionId().toString());
			keyBuilder.append(".");
		}
		// TODO: when hub provides links, this may have to change
		keyBuilder.append(vulnerabilitySource);
		keyBuilder.append(".");
		keyBuilder.append(vulnerabilityId);
		return keyBuilder.toString();
	}
}
