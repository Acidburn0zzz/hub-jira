package com.blackducksoftware.integration.jira.hub;

import java.util.UUID;

import com.blackducksoftware.integration.jira.hub.model.component.vulnerability.VulnerableComponent;
import com.blackducksoftware.integration.jira.issue.EventType;

public class FilteredNotificationResultVulnerability extends FilteredNotificationResult {
	private final VulnerableComponent vulnerableComponent;
	private final UUID vulnerableComponentId;

	public FilteredNotificationResultVulnerability(final String hubProjectName, final String hubProjectVersion,
			final String hubComponentName, final String hubComponentVersion,
			final UUID hubProjectVersionId, final UUID hubComponentId,
			final UUID hubComponentVersionId, final String jiraUserName,
			final String jiraIssueTypeId, final Long jiraProjectId, final String jiraProjectName,
			final EventType eventType, final VulnerableComponent vulnerableComponent, final UUID vulnerableComponentId) {

		super(hubProjectName, hubProjectVersion, hubComponentName, hubComponentVersion, hubProjectVersionId,
				hubComponentId, hubComponentVersionId, jiraUserName, jiraIssueTypeId, jiraProjectId, jiraProjectName,
				eventType);
		this.vulnerableComponent = vulnerableComponent;
		this.vulnerableComponentId = vulnerableComponentId;
	}

	public VulnerableComponent getVulnerableComponent() {
		return vulnerableComponent;
	}

	public UUID getVulnerableComponentId() {
		return vulnerableComponentId;
	}

	@Override
	public String getUniquePropertyKey() {
		final StringBuilder keyBuilder = new StringBuilder();
		keyBuilder.append(getJiraProjectId().toString());
		keyBuilder.append(".");
		keyBuilder.append(getHubProjectVersionId().toString());
		keyBuilder.append(".");
		keyBuilder.append(getHubComponentId().toString());
		keyBuilder.append(".");
		if (getHubComponentVersionId() != null) {
			keyBuilder.append(getHubComponentVersionId().toString());
			keyBuilder.append(".");
		}
		keyBuilder.append(getVulnerableComponentId().toString());
		return keyBuilder.toString();
	}
}
